/*
 *   ____                      _
 *  / ___| ___ _ __   ___ _ __(_) ___
 * | |  _ / _ \ '_ \ / _ \ '__| |/ __|
 * | |_| |  __/ | | |  __/ |  | | (__
 *  \____|\___|_| |_|\___|_|  |_|\___|
 *
 * Very generic (non project-specific) set of utilities
 * that could have been used in any project.
 */

/* Upright font style */
@utility roman {
  font-style: normal;
}

/* Italic font style */
@utility italic {
  font-style: italic;
}

/* Oblique font style */
@utility oblique {
  font-style: oblique;
}

/* Muted text color */
@utility muted {
  color: var(--color-muted-foreground);
}

/* Blend color towards white */
/* noinspection CssOverwrittenProperties */
@utility brighter-* {
  color: color-mix(in oklch, currentColor, white calc(--value(integer) * 1%));
  color: color-mix(in oklch, currentColor, white --value([percentage]));

  @variant print {
    color: inherit;
  }
}

/* Blend color towards black */
/* noinspection CssOverwrittenProperties */
@utility darker-* {
  color: color-mix(in oklch, currentColor, black calc(--value(integer) * 1%));
  color: color-mix(in oklch, currentColor, black --value([percentage]));

  @variant print {
    color: inherit;
  }
}

/*
 *   ____            _        _
 *  / ___|___  _ __ | |_ __ _(_)_ __   ___ _ __
 * | |   / _ \| '_ \| __/ _` | | '_ \ / _ \ '__|
 * | |__| (_) | | | | || (_| | | | | |  __/ |
 *  \____\___/|_| |_|\__\__,_|_|_| |_|\___|_|
 *
 */

/* Utility to set the width of the container */
@utility custom-container-width {
  @variant tablet {
  }

  @variant not-print {
    max-width: var(--breakpoint-tablet);

    @variant tablet {
      margin-inline: auto;
      width: var(--breakpoint-tablet);
    }
  }

  @variant motion-safe {
    @apply transition-all;
  }
}

/*
 *  ___       _ _
 * |_ _|_ __ | (_)_ __   ___
 *  | || '_ \| | | '_ \ / _ \
 *  | || | | | | | | | |  __/
 * |___|_| |_|_|_|_| |_|\___|
 *
 */

/* Hyperlink with customizable resting and hover colors */
@utility hyperlink {
  background-color: var(--hyperlink-background-resting);
  color: var(--hyperlink-foreground-resting);

  @variant hover {
    color: var(--hyperlink-foreground-hover);
    background-color: var(--hyperlink-background-hover);
  }

  @variant focus {
    outline: 2px solid var(--hyperlink-outline-focus);
    outline-offset: 1px;
  }

  @variant motion-safe {
    @apply transition-colors duration-150;
  }
}

/* Underlines the hyperlink with adaptive colors */
@utility hyperlink-underline {
  text-decoration: underline;
  text-decoration-color: --alpha(var(--hyperlink-foreground-resting) / 20%);
  text-decoration-thickness: 0.125em;
  text-underline-offset: 0.15em;
}

/*
 *  ___
 * |_ _|___ ___  _ __  ___
 *  | |/ __/ _ \| '_ \/ __|
 *  | | (_| (_) | | | \__ \
 * |___\___\___/|_| |_|___/
 *
 */

/* Underlines the hyperlink with adaptive colors */
@utility twemoji {
  display: inline-block;
  margin-top: 0;
  margin-bottom: 0;
  height: 1.15em;
  width: 1.15em;
  vertical-align: -0.25em;
}

/* Enforces icon under this utility to appear on print */
@utility iconify {
  print-color-adjust: exact;
}

/* Enforces icon under this utility to appear on print */
@utility iconify-color {
  print-color-adjust: exact;
}

/*
 *  ____            _           _                            _  __ _
 * |  _ \ _ __ ___ (_) ___  ___| |_      ___ _ __   ___  ___(_)/ _(_) ___
 * | |_) | '__/ _ \| |/ _ \/ __| __|____/ __| '_ \ / _ \/ __| | |_| |/ __|
 * |  __/| | | (_) | |  __/ (__| ||_____\__ \ |_) |  __/ (__| |  _| | (__
 * |_|   |_|  \___// |\___|\___|\__|    |___/ .__/ \___|\___|_|_| |_|\___|
 *               |__/                       |_|
 */

/* Utility to highlight the fursona name */
@utility bole {
  font-weight: var(--font-weight-extrabold);
  color: var(--color-bole);
}

/* Styling International Phonetic Alphabet (IPA) */
@utility ipa {
  display: inline-block;
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--tracking-wider);
  color: var(--color-gray-400);

  @variant print {
    color: inherit;
  }
}
