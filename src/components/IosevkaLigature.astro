---
const LIGATURE_FEATURES = [
  "none",
  "calt",
  "dlig",
  "CLIK",
  "JSPT",
  "PHPX",
  "JLIA",
  "RAKU",
  "MLXX",
  "FSHP",
  "FSTA",
  "HSKL",
  "IDRS",
  "ELMX",
  "PURS",
  "SWFT",
  "DFNY",
  "COQX",
  "MTLB",
  "VRLG",
  "WFLM",
  "ERLA",
] as const;

type LigatureFeature = (typeof LIGATURE_FEATURES)[number];

function isLigatureFeature(value: string): value is LigatureFeature {
  return LIGATURE_FEATURES.includes(value as LigatureFeature);
}

function getFontFeatureSettingsValue(feature: LigatureFeature) {
  if (feature === "calt") {
    return '"calt" 1';
  } else if (feature === "none") {
    return '"calt" 0';
  } else if (isLigatureFeature(feature)) {
    return `"calt" 0, "${feature}" 1`;
  } else {
    throw new Error(`Invalid ligature feature: ${feature}`);
  }
}

export interface Props {
  feature: LigatureFeature;
}

const { feature } = Astro.props as Props;
const fontFeatureSettingsValue = getFontFeatureSettingsValue(feature);
---

<div
  class="contents"
  style={`font-feature-settings: ${fontFeatureSettingsValue}`}
>
  <slot />
</div>
